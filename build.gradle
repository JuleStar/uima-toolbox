/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'cram-d' at '07/06/16 15:28' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.

	mavenLocal()
	mavenCentral()
    jcenter()
}

group = 'fr.univ-nantes.julestar'
archivesBaseName = 'uima-toolbox'
version = '1.0'

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId group
			artifactId archivesBaseName
			version version
			
			from components.java
		}
	}
}


task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

if(hasProperty("signing.keyId")) {
	// activate signing of artifacts, only if signing is configured properly
	signing {
		sign configurations.archives
	}
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
	
	compile 'org.apache.uima:uimaj-core:2.6.0'
	compile "org.apache.uima:uimafit-core:2.1.0"

}


if(hasProperty("ossrhUsername")) {
	uploadArchives {
		repositories {
		  mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
	
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
			  authentication(userName: ossrhUsername, password: ossrhPassword)
			}
	
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
			  authentication(userName: ossrhUsername, password: ossrhPassword)
			}
	
			pom.project {
			  name 'UIMA Toolbox'
			  packaging 'jar'
			  // optionally artifactId can be defined here
			  description ' A UIMA toolbox library'
			  url 'https://github.com/JuleStar/uima-toolbox'
	
			  scm {
				  connection 'scm:git:git@github.com:julestar/uima-toolbox.git'
				  developerConnection 'scm:git:git@github.com:julestar/uima-toolbox.git'
				  url 'git@github.com:julestar/uima-toolbox.git'
			  }
	
			  licenses {
				  license {
					  name 'The Apache License, Version 2.0'
					  url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				  }
			  }
	
			  developers {
				  developer {
					  id developerId
					  name developerName
					  email developerEmail
				  }
			  }
			}
		  }
		}
	}
} else {
def msg = "Publishing to maven central (task uploadArchives) is not possible since no gradle property file is found (use \"\$ cp gradle.properties.sample gradle.properties\")"
logger.warn(msg)
}
